@model Monolithic_SinglePage.Models.ViewModel.ProductViewModel
@{
    ViewBag.Title = "Product";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>

    <meta name="viewport" content="width=device-width" charset="UTF-8" />


    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.5.1.js"></script>
    <link href="~/Content/CSS/Index.css" rel="stylesheet" />

</head>
<body>
    <div class="bg">

        <p class="py-5 text-center">This example creates a full page background image. Try to resize the browser window to see how it always will cover the full screen (when scrolled to top), and that it scales nicely on all screen sizes.</p>

        <div class="container-fluid">
            <h3>Product Sakhtam </h3>
            <p>¯\_(ツ)_/¯</p>
            <hr />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="row form-group-sm" id="toolbar">
                    <div class="col-sm-1"></div>
                    <button type="button" class="btn btn-outline-success col-sm-1" name="saveButton" id="btnSave">Save</button>
                    <div class="col-sm-1"></div>
                    <button type="button" class="btn btn-outline-primary col-sm-1" name="editButton" id="btnEdit">Edit</button>
                    <div class="col-sm-1"></div>
                    <button type="button" class="btn btn-outline-danger col-sm-1" name="deleteButton" id="btnDelete">Delete</button>
                    <div class="col-sm-1"></div>
                    <button type="button" class="btn btn-outline-dark col-sm-1" name="refreshButton" id="btnRefresh">Refresh</button>
                    <div class="col-sm-1"></div>
                    <span class="badge badge-pill badge-warning col-sm-2">Saman</span>
                    <div class="col-sm-1"></div>
                </div>

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "p-2 mb-1 bg-secondary text-white" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Code, new { id = "code", HtmlAttribute = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "p-2 mb-1 bg-secondary text-white" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Title, new { id = "title", HtmlAttribute = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>

                    </div>





                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryRef, htmlAttributes: new { @class = "p-2 mb-1 bg-secondary text-white" })
                        <div class="col-md-10">                               
                               @Html.TextBoxFor(model => model.CategoryRef, new { id = "categoryref", HtmlAttribute = new { @class = "form-control" } })
                               @Html.ValidationMessageFor(model => model.CategoryRef, "", new { @class = "text-danger" })
                        </div>

                    </div>








                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "p-2 mb-1 bg-secondary text-white" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Quantity, new { id = "quantity", HtmlAttribute = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "p-2 mb-1 bg-secondary text-white" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.UnitPrice, new { id = "unitprice", HtmlAttribute = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                        </div>

                    </div>


                </div>
            }

        <table id="Product_Table" class="table table-striped table-dark" cellspacing="0" rules="all" border="1" style="border-collapse:collapse;">
            <thead>
                <tr>

                    <th style="display:none;">
                        @Html.DisplayNameFor(model => model.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Code)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CategoryRef)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnitPrice)
                    </th>

                </tr>
            </thead>
            @foreach (var item in Model.Get_Product())
            {

                <tr>

                    <td style="display:none;">
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CategoryRef)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitPrice)
                    </td>

                </tr>
            }

        </table>




        </div>
    </div>



        @*_______________________________JavaScript___________________________________*@

        <script type="text/javascript">

            //-------------Save------------//


            $("#btnSave").click(function () {
                let ref_ProductViewModel = {
                    Code: $('#code').val(), Title: $('#title').val(), CategoryRef: $("#categoryref").val(), Quantity: $("#quantity").val(),
                    UnitPrice: $("#unitprice").val()
                };
                console.log("Code" + ref_ProductViewModel.Code);
                $.ajax({
                    url: "/Product/Create",
                    data: JSON.stringify(ref_ProductViewModel),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        console.log("success");
                        location.reload();

                    },
                    error: function (errormessage) {
                        console.log(errormessage.responseText);
                    }

                });

            })

                    //----------Selec-Row----------//

            var table = document.getElementById("Product_Table"), rIndex;
            for (var i = 0; i < table.rows.length; i++) {
                table.rows[i].onclick = function () {
                    rIndex = this.rowIndex;
                    console.log("Index of table :" + rIndex)
                    var id = this.cells[0].innerHTML;
                    $("#code").val(this.cells[1].innerHTML.trim());
                    $("#title").val(this.cells[2].innerHTML.trim());
                    $("#categoryref").val(this.cells[3].innerHTML.trim());
                    $("#quantity").val(this.cells[4].innerHTML.trim());
                    $("#unitprice").val(this.cells[5].innerHTML.trim());
                }
            }

            //----------Edit-----------//
            $("#btnEdit").click(function () {
                var ref_ProductViewModel = {};
                ref_ProductViewModel.Id = table.rows[rIndex].cells[0].innerHTML;
                ref_ProductViewModel.Code = $("#code").val();
                ref_ProductViewModel.Title = $("#title").val();
                ref_ProductViewModel.CategoryRef = $("#categoryref").val();
                ref_ProductViewModel.Quantity = $("#quantity").val();
                ref_ProductViewModel.UnitPrice = $("#unitprice").val();
                $.ajax({
                    url: "/Product/Edit",
                    data: JSON.stringify(ref_ProductViewModel),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        console.log("success");
                        location.reload();

                    },
                    error: function (errormessage) {
                        console.log(errormessage.responseText);
                    }

                });
            })

            $("#btnDelete").click(function () {

                var ref_CategoryViewModel = {};
                ref_ProductViewModel.Id = table.rows[rIndex].cells[0].innerHTML;
                $.ajax({
                    url: "/Product/Delete",
                    data: JSON.stringify(ref_ProductViewModel),
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        console.log("success");
                        location.reload();

                    },
                    error: function (errormessage) {
                        console.log(errormessage.responseText);
                    }

                });


            })
            //---------Refresh---------//

            $("#btnRefresh").click(function () {
                 location.reload();


            })
















        </script>









</body>


</html>

